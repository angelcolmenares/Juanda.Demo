@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>
<MudText Typo="Typo.h4">Weather forecast</MudText>
<MudText>This component demonstrates fetching data from the server.</MudText>
<MudTable 
  Items="@forecasts" 
  Bordered="true" 
  Striped="true" >
    <ToolBarContent>
        <MudText Typo="Typo.h6">Weather forecast</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Date</MudTh>
        <MudTh>TempeartureC</MudTh>
        <MudTh>Summary</MudTh>
        <MudTh>TempeartureF</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">@context.TemperatureC</MudTd>
        <MudTd DataLabel="TemperatureC">@context.TemperatureC</MudTd>
        <MudTd DataLabel="Summary">@context.Summary</MudTd>
        <MudTd DataLabel="TemperatureF">@context.TemperatureF</MudTd>
    </RowTemplate>
</MudTable>


@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
